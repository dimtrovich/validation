# When a PR is opened or a push is made, perform
# a static analysis check on the code using PHPStan.
name: PHPStan

on:
  schedule:
    - cron: '0 0 * * *'
  pull_request:
    paths:
      - 'src/**.php'
      - composer.json
      - phpstan.neon.dist
      - phpstan-baseline.php
      - '.github/workflows/test-phpstan.yml'
  push:
    paths:
      - 'src/**.php'
      - composer.json
      - phpstan.neon.dist
      - phpstan-baseline.php
      - '.github/workflows/test-phpstan.yml'

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

permissions:
  contents: read

jobs:
  build:
    name: PHP ${{ matrix.php-version }} Static Analysis
    runs-on: ubuntu-22.04
    strategy:
      fail-fast: false
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.1'
          extensions: intl
          coverage: none

      - name: Use latest Composer
        run: composer self-update

      - name: Validate composer.json
        run: composer validate --strict
        
      - name: Get composer cache directory
        run: echo "COMPOSER_CACHE_FILES_DIR=$(composer config cache-files-dir)" >> $GITHUB_ENV

      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: ${{ env.COMPOSER_CACHE_FILES_DIR }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.json') }}
          restore-keys: composer-${{ runner.os }}-

      - name: Create PHPStan result cache directory
        run: mkdir -p build/phpstan

      - name: Cache PHPStan result cache directory
        uses: actions/cache@v4
        with:
          path: build/phpstan
          key: ${{ runner.os }}-phpstan-${{ github.sha }}
          restore-keys: ${{ runner.os }}-phpstan-

      - name: Setup Composer's GitHub OAuth access
        run: composer config --global github-oauth.github.com ${{ secrets.GITHUB_TOKEN }}

      - name: Install dependencies
        run: composer update --ansi --no-interaction

      - name: Run PHPStan
        run: vendor/bin/phpstan analyse
